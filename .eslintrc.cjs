module.exports = {
  env: {
    node: true,
    es2024: true,
  },

  parser: "@typescript-eslint/parser",
  parserOptions: {
    sourceType: "module",
    project: "./tsconfig.eslint.json",
    tsconfigRootDir: __dirname,
  },
  plugins: ["@typescript-eslint"],

  extends: [
    "eslint:recommended",
    "plugin:@typescript-eslint/strict-type-checked",
    "plugin:@typescript-eslint/stylistic-type-checked",
    "prettier",
  ],

  rules: {
    // ========================================== ESLint ==========================================
    // Possible Problem
    "array-callback-return": "warn",
    "no-await-in-loop": "warn",
    "no-constant-binary-expression": "warn",
    "no-constructor-return": "warn",
    "no-duplicate-imports": "warn",
    "no-irregular-whitespace": ["warn", { skipTemplates: true }],
    "no-new-native-nonconstructor": "warn",
    "no-promise-executor-return": "warn",
    "no-self-compare": "warn",
    "no-template-curly-in-string": "warn",
    "no-unmodified-loop-condition": "warn",
    "no-unreachable-loop": "warn",
    "no-unused-private-class-members": "warn",
    "require-atomic-updates": "warn",

    // Suggestions
    "accessor-pairs": "warn",
    "arrow-body-style": "warn",
    "default-case-last": "warn",
    "eqeqeq": "warn",
    "func-style": "warn",
    "grouped-accessor-pairs": ["warn", "getBeforeSet"],
    "new-cap": "warn",
    "no-array-constructor": "warn",
    "no-caller": "warn",
    "no-empty": ["warn", { allowEmptyCatch: true }],
    "no-eval": "warn",
    "no-floating-decimal": "warn",
    "no-implicit-coercion": "warn",
    "no-implied-eval": "warn",
    "no-labels": "warn",
    "no-lone-blocks": "warn",
    "no-lonely-if": "warn",
    "no-multi-str": "warn",
    "no-nested-ternary": "warn",
    "no-new-func": "warn",
    "no-new-object": "warn",
    "no-new-wrappers": "warn",
    "no-proto": "warn",
    "no-script-url": "warn",
    "no-sequences": "warn",
    "no-undef-init": "warn",
    "no-unneeded-ternary": "warn",
    "no-useless-call": "warn",
    "no-var": "warn",
    "no-void": ["warn", { allowAsStatement: true }],
    "one-var": ["warn", "never"],
    "prefer-const": "warn",
    "sort-imports": ["warn", { ignoreCase: true, ignoreDeclarationSort: true, allowSeparatedGroups: true }],
    "quote-props": ["warn", "consistent-as-needed"],
    "spaced-comment": "warn",

    // ===================================== typescript-eslint =====================================
    // Supported Rules
    "@typescript-eslint/consistent-type-exports": "warn",
    "@typescript-eslint/consistent-type-imports": "warn",
    "@typescript-eslint/explicit-member-accessibility": "warn",
    "@typescript-eslint/member-ordering": "warn",
    "@typescript-eslint/method-signature-style": "warn",
    "@typescript-eslint/naming-convention": [
      "warn",
      { selector: "typeLike", format: ["PascalCase"] },
      {
        selector: "variableLike",
        format: ["camelCase", "PascalCase"],
        leadingUnderscore: "allow",
        trailingUnderscore: "allow",
      },
      { selector: "enumMember", format: ["StrictPascalCase"] },
      {
        selector: "variable",
        modifiers: ["const"],
        format: ["camelCase", "PascalCase", "UPPER_CASE"],
        leadingUnderscore: "allow",
        trailingUnderscore: "allow",
      },
      {
        selector: "variable",
        types: ["boolean"],
        format: ["PascalCase"],
        prefix: ["is", "should", "has", "can", "did", "will"],
      },
    ],
    "@typescript-eslint/no-import-type-side-effects": "warn",
    "@typescript-eslint/no-require-imports": "warn",
    "@typescript-eslint/no-unnecessary-qualifier": "warn",
    "@typescript-eslint/no-useless-empty-export": "warn",
    "@typescript-eslint/parameter-properties": "warn",
    "@typescript-eslint/prefer-readonly": "warn",
    "@typescript-eslint/promise-function-async": "warn",
    "@typescript-eslint/require-array-sort-compare": "warn",
    "@typescript-eslint/sort-type-constituents": "warn",
    "@typescript-eslint/strict-boolean-expressions": [
      "warn",
      { allowNullableBoolean: true, allowNullableString: true },
    ],
    "@typescript-eslint/switch-exhaustiveness-check": "warn",

    // Extension Rules
    "@typescript-eslint/class-methods-use-this": "warn",
    "@typescript-eslint/default-param-last": "warn",
    "@typescript-eslint/init-declarations": "warn",
    "@typescript-eslint/lines-between-class-members": ["warn", "always", { exceptAfterSingleLine: true }], // Formatting
    "@typescript-eslint/no-dupe-class-members": "warn",
    "@typescript-eslint/no-invalid-this": "warn",
    "@typescript-eslint/no-loop-func": "warn",
    "@typescript-eslint/no-magic-numbers": [
      "warn",
      {
        ignore: [-1, 0, 0.1, 1, 2, 3, 4, 5, 10, 20, 60, 100, 400, 1000, 1024, 3000, 3600, 5000, 60000, 86400],
        ignoreArrayIndexes: true,
        ignoreEnums: true,
        ignoreTypeIndexes: true,
      },
    ],
    "@typescript-eslint/no-redeclare": "warn",
    "@typescript-eslint/no-shadow": "warn",
    "@typescript-eslint/no-unused-expressions": "warn",
    "@typescript-eslint/no-unused-vars": ["warn", { varsIgnorePattern: "^_", argsIgnorePattern: "^_" }],
    "@typescript-eslint/no-use-before-define": ["warn", { variables: false }],
  },
};
